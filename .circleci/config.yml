# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:8.12
    working_directory: /tmp/workspace/pixeloven

jobs:
  setup:
    executor: node-executor
    steps:
      # Create workspace
      - run: mkdir -p workspace
      # Checkout repo
      - checkout:
          path: /tmp/workspace/pixeloven

      # Persist the specified paths (pixeloven) into the workspace for use in downstream job. 
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory created by checking out source.
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - pixeloven

  build:
    executor: node-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace/pixeloven

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      # Check for pixeloven deps
      - run:
          name: List packages
          command: ls -al node_modules/@pixeloven

        # Run build and test
      - run:
            name: Lint source
            command: yarn lint
      - run:
          name: Compile source
          command: yarn compile
      - run:
          name: Test source
          command: yarn test

  report:
    executor: node-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace/pixeloven

      # Run test and report
      - run:
          name: Test source
          command: yarn report-coverage

workflows:
  version: 2.1
  setup-build-and-report:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - report:
          requires:
            - build
          filters:
            branches:
              only: master